"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_services_imageUploadService_ts"],{

/***/ "(app-pages-browser)/./src/services/imageUploadService.ts":
/*!********************************************!*\
  !*** ./src/services/imageUploadService.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteImage: function() { return /* binding */ deleteImage; },\n/* harmony export */   getImageMetadata: function() { return /* binding */ getImageMetadata; },\n/* harmony export */   optimizeImage: function() { return /* binding */ optimizeImage; },\n/* harmony export */   uploadRestaurantImage: function() { return /* binding */ uploadRestaurantImage; },\n/* harmony export */   validateImage: function() { return /* binding */ validateImage; }\n/* harmony export */ });\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"(app-pages-browser)/./node_modules/firebase/storage/dist/esm/index.esm.js\");\n\n\n// Firebase Storage bağlantısını test et\nasync function testFirebaseStorageConnection() {\n    try {\n        console.log(\"\\uD83D\\uDD25 Firebase Storage bağlantısı test ediliyor...\");\n        // Test dosyası oluştur\n        const testData = new Blob([\n            \"Firebase Storage Test\"\n        ], {\n            type: \"text/plain\"\n        });\n        const testRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_lib_firebase__WEBPACK_IMPORTED_MODULE_0__.storage, \"test/connection-test.txt\");\n        // Test yüklemesi\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(testRef, testData);\n        console.log(\"✅ Firebase Storage yazma testi başarılı\");\n        // Test okuma\n        const downloadURL = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(testRef);\n        console.log(\"✅ Firebase Storage okuma testi başarılı:\", downloadURL);\n        return true;\n    } catch (error) {\n        console.error(\"❌ Firebase Storage bağlantı testi başarısız:\", error);\n        return false;\n    }\n}\n// Ana kapak görseli yükleme fonksiyonu\nasync function uploadRestaurantImage(file, restaurantId) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    try {\n        console.log(\"\\uD83D\\uDE80 Kapak g\\xf6rseli y\\xfckleme başlatılıyor...\", {\n            fileName: file.name,\n            fileSize: \"\".concat((file.size / 1024 / 1024).toFixed(2), \" MB\"),\n            fileType: file.type,\n            restaurantId,\n            storageConfig: {\n                bucket: _lib_firebase__WEBPACK_IMPORTED_MODULE_0__.storage.app.options.storageBucket,\n                projectId: _lib_firebase__WEBPACK_IMPORTED_MODULE_0__.storage.app.options.projectId\n            }\n        });\n        // Firebase Storage bağlantısını test et\n        const isStorageConnected = await testFirebaseStorageConnection();\n        if (!isStorageConnected) {\n            throw new Error(\"Firebase Storage bağlantısı kurulamadı. L\\xfctfen Firebase Console'dan Storage'ı etkinleştirin.\");\n        }\n        // Dosya validasyonu\n        const validationResult = validateImage(file);\n        if (!validationResult.isValid) {\n            throw new Error(validationResult.error || \"Ge\\xe7ersiz dosya\");\n        }\n        // Progress callback başlangıç\n        if (options.onProgress) {\n            options.onProgress(10);\n        }\n        // Dosya yolu oluştur\n        const timestamp = Date.now();\n        const fileName = \"\".concat(timestamp, \"_\").concat(file.name.replace(/[^a-zA-Z0-9.-]/g, \"_\"));\n        const folderPath = restaurantId ? \"restaurants/\".concat(restaurantId) : \"restaurants\";\n        const filePath = \"\".concat(folderPath, \"/\").concat(fileName);\n        console.log(\"\\uD83D\\uDCC1 Dosya yolu:\", filePath);\n        // Firebase Storage referansı oluştur\n        const storageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_lib_firebase__WEBPACK_IMPORTED_MODULE_0__.storage, filePath);\n        console.log(\"\\uD83D\\uDCCD Storage referansı oluşturuldu:\", storageRef.fullPath);\n        // Progress simulation\n        if (options.onProgress) {\n            options.onProgress(25);\n        }\n        // Dosyayı yükle\n        console.log(\"⬆️ Firebase Storage'a y\\xfckleniyor...\");\n        // Progress simulation during upload\n        const progressInterval = setInterval(()=>{\n            if (options.onProgress) {\n                // Simulate progress between 25-75%\n                const currentProgress = Math.min(75, 25 + Math.random() * 50);\n                options.onProgress(currentProgress);\n            }\n        }, 200);\n        try {\n            const uploadResult = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(storageRef, file);\n            clearInterval(progressInterval);\n            console.log(\"✅ Dosya y\\xfckleme başarılı:\", uploadResult.metadata);\n            if (options.onProgress) {\n                options.onProgress(90);\n            }\n            // Download URL al\n            console.log(\"\\uD83D\\uDD17 Download URL alınıyor...\");\n            const downloadURL = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(uploadResult.ref);\n            if (options.onProgress) {\n                options.onProgress(100);\n            }\n            console.log(\"✅ Kapak g\\xf6rseli başarıyla y\\xfcklendi:\", downloadURL);\n            return downloadURL;\n        } catch (uploadError) {\n            clearInterval(progressInterval);\n            console.error(\"❌ Upload hatası detayları:\", {\n                error: uploadError,\n                errorMessage: uploadError instanceof Error ? uploadError.message : \"Bilinmeyen hata\",\n                errorCode: uploadError === null || uploadError === void 0 ? void 0 : uploadError.code,\n                storageRef: storageRef.fullPath,\n                fileSize: file.size,\n                fileType: file.type\n            });\n            throw uploadError;\n        }\n    } catch (error) {\n        console.error(\"❌ Kapak g\\xf6rseli y\\xfckleme hatası:\", error);\n        throw handleUploadError(error);\n    }\n}\n// Hata yönetimi fonksiyonu\nfunction handleUploadError(error) {\n    console.error(\"\\uD83D\\uDD0D Hata analizi:\", {\n        errorType: typeof error,\n        errorName: error === null || error === void 0 ? void 0 : error.name,\n        errorMessage: error === null || error === void 0 ? void 0 : error.message,\n        errorCode: error === null || error === void 0 ? void 0 : error.code,\n        errorStack: error === null || error === void 0 ? void 0 : error.stack\n    });\n    if (error instanceof Error) {\n        // Firebase Storage hata kodları\n        if (error.message.includes(\"storage/unauthorized\") || error.message.includes(\"permission-denied\")) {\n            return new Error(\"Yetkilendirme hatası. Firebase Storage kurallarını kontrol edin.\");\n        } else if (error.message.includes(\"storage/quota-exceeded\")) {\n            return new Error(\"Depolama kotası aşıldı.\");\n        } else if (error.message.includes(\"storage/invalid-format\")) {\n            return new Error(\"Ge\\xe7ersiz dosya formatı.\");\n        } else if (error.message.includes(\"storage/object-not-found\")) {\n            return new Error(\"Dosya bulunamadı.\");\n        } else if (error.message.includes(\"storage/canceled\")) {\n            return new Error(\"Y\\xfckleme iptal edildi.\");\n        } else if (error.message.includes(\"storage/unknown\")) {\n            return new Error(\"Firebase Storage hen\\xfcz kurulmamış. L\\xfctfen Firebase Console'dan Storage'ı başlatın.\");\n        } else if (error.message.includes(\"network\") || error.message.includes(\"fetch\")) {\n            return new Error(\"İnternet bağlantısı problemi. L\\xfctfen tekrar deneyin.\");\n        } else if (error.message.includes(\"CORS\")) {\n            return new Error(\"CORS hatası. Firebase Storage konfig\\xfcrasyonunu kontrol edin.\");\n        } else {\n            return new Error(\"Y\\xfckleme hatası: \".concat(error.message));\n        }\n    }\n    return new Error(\"Bilinmeyen bir hata oluştu. L\\xfctfen tekrar deneyin.\");\n}\n// Görsel optimizasyonu (opsiyonel)\nasync function optimizeImage(file) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    return new Promise((resolve)=>{\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.onload = ()=>{\n            const { maxWidth = 1920, maxHeight = 1080, quality = 0.8 } = options;\n            let { width, height } = img;\n            // Boyut sınırlaması\n            if (width > maxWidth || height > maxHeight) {\n                const ratio = Math.min(maxWidth / width, maxHeight / height);\n                width *= ratio;\n                height *= ratio;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, width, height);\n            canvas.toBlob((blob)=>{\n                if (blob) {\n                    const optimizedFile = new File([\n                        blob\n                    ], file.name, {\n                        type: options.format === \"webp\" ? \"image/webp\" : file.type,\n                        lastModified: Date.now()\n                    });\n                    resolve(optimizedFile);\n                } else {\n                    resolve(file);\n                }\n            }, options.format === \"webp\" ? \"image/webp\" : file.type, quality);\n        };\n        img.src = URL.createObjectURL(file);\n    });\n}\n// Dosya validasyonu\nfunction validateImage(file) {\n    // Dosya boyutu kontrolü (10MB)\n    const maxSize = 10 * 1024 * 1024;\n    if (file.size > maxSize) {\n        return {\n            isValid: false,\n            error: \"Dosya boyutu 10MB'dan b\\xfcy\\xfck olamaz.\"\n        };\n    }\n    // Dosya tipi kontrolü\n    const allowedTypes = [\n        \"image/jpeg\",\n        \"image/jpg\",\n        \"image/png\",\n        \"image/webp\"\n    ];\n    if (!allowedTypes.includes(file.type)) {\n        return {\n            isValid: false,\n            error: \"Sadece JPEG, PNG ve WebP formatları desteklenir.\"\n        };\n    }\n    return {\n        isValid: true\n    };\n}\n// Görsel metadata'sını al\nfunction getImageMetadata(file) {\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.onload = ()=>{\n            resolve({\n                width: img.naturalWidth,\n                height: img.naturalHeight,\n                format: file.type,\n                size: file.size,\n                aspectRatio: img.naturalWidth / img.naturalHeight\n            });\n        };\n        img.onerror = ()=>reject(new Error(\"G\\xf6rsel metadata alınamadı\"));\n        img.src = URL.createObjectURL(file);\n    });\n}\n// Görsel silme fonksiyonu\nasync function deleteImage(imageUrl) {\n    try {\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_lib_firebase__WEBPACK_IMPORTED_MODULE_0__.storage, imageUrl);\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.deleteObject)(imageRef);\n        console.log(\"✅ G\\xf6rsel başarıyla silindi\");\n    } catch (error) {\n        console.error(\"❌ G\\xf6rsel silme hatası:\", error);\n        throw new Error(\"G\\xf6rsel silinemedi\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/imageUploadService.ts\n"));

/***/ })

}]);